@using System.Web.Mvc.Html
@model LoginModel

@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<script type="text/javascript">
    function showPopupLogin() {
        $.blockUI({
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            },
            message: '<img src="../Content/assets/img/gear.gif" width="31" /> Авторизация. Пожалуйста, подождите...'
        });
    };
</script>

@if (TempData["message"] != null)
{
    <div class="registerContainer">
        <div class="alert alert-success">@TempData["message"]</div>
    </div>
}
<div class="container">
    <div class="row">
        <div class="col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3">
            <div class="card card-signup">
                @using (Ajax.BeginForm(new AjaxOptions()
                {
                    OnBegin = "showPopupLogin",
                    UpdateTargetId = "loginPageBody"
                }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl"/>
                    <div class="header header-primary text-center">
                        <h4>Авторизация</h4>
                    </div>
                    @Html.ValidationSummary(true)
                    <div class="content">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="material-icons">face</i>
                            </span>
                            <div class="label-floating form-group">
                                @Html.LabelFor(x => x.Name, new {@class = "control-label"})
                                @Html.TextBoxFor(x => x.Name, new {@class = "form-control"})
                                @Html.ValidationMessageFor(x => x.Name)
                            </div>
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="material-icons">lock_outline</i>
                            </span>
                            <div class="label-floating form-group">
                                @Html.LabelFor(x => x.Password, new {@class = "control-label"})
                                @Html.PasswordFor(x => x.Password, new {@class = "form-control"})
                                @Html.ValidationMessageFor(x => x.Password)
                            </div>
                        </div>
                    </div>
                    <div class="footer text-center">
                        <input type="submit" value="Войти" class="btn btn-simple btn-primary btn-lg" id="loginButton"/>
                        @Ajax.ActionLink("Демо-вход", "LoginDemo", null, new AjaxOptions()
                        {
                            UpdateTargetId = "loginPageBody",
                            OnBegin = "showPopupLogin"
                        },
                            new {@class = "btn btn-simple btn-primary btn-lg"})
                        <div style="text-align: center">
                            @Html.ActionLink("Зарегистрироваться", "Register", null, new {@class = "btn btn-simple btn-primary btn-lg"})
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>