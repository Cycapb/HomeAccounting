@model PayingItemEditModel
@{
    List<Category> catList = ViewBag.Categories;
    List<Account> accList = ViewBag.Accounts;
}
<div class="panel panel-primary">
    <div class="panel-heading">Редактирование транзакции</div>

    @using (Ajax.BeginForm("Edit", new AjaxOptions()
    {
        Url = Url.Action("Edit"),
        UpdateTargetId = "payingDiv",
        OnSuccess = "updateAccounts"
    }))
    {
        <div class="panel-body">
            <div class="form-group">
                @Html.HiddenFor(x => x.PayingItem.ItemID)
                @Html.HiddenFor(x => x.PayingItem.UserId)
                <label>Категория:</label>
                @Html.DropDownListFor(x => x.PayingItem.CategoryID, catList.Select(x => new SelectListItem()
                {
                    Text = x.Name,
                    Value = x.CategoryID.ToString()
                }), new { @class = "selectpicker", onchange = "changeCategoryEdit()" })
            </div>
            @if (Model.PayingItemProducts != null && Model.PayingItemProducts.Any())
            {
                <div class="form-group" id="subcategoriesDiv">
                    <table class="table table-striped" id="productsEditTable">
                        <tr>
                            <th></th>
                            <th>Наименование</th>
                            <th>Описание</th>
                            <th>Цена</th>
                        </tr>

                        @for (int i = 0; i < Model.ProductsInItem.Count(); i++)
                        {
                            <tr>
                                <td>
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" checked="checked" name="PricesAndIdsInItem[@i].Id" value="@Model.ProductsInItem[i].ProductId" />
                                            <span class="checkbox-material">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </td>
                                <td>
                                    @Model.ProductsInItem[i].ProductName
                                </td>
                                <td>
                                    @Model.ProductsInItem[i].ProductDescription
                                </td>
                                <td>
                                    @Html.TextBox("PricesAndIdsInItem[" + i + "].Price", Model.ProductsInItem[i].Price.ToString("F"), new { @class = "form-control" })
                                </td>
                            </tr>
                        }
                        @for (int i = 0; i < Model.ProductsNotInItem.Count(); i++)
                        {
                            <tr>
                                <td>
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="PricesAndIdsNotInItem[@i].Id" value="@Model.ProductsNotInItem[i].ProductID" />
                                            <span class="checkbox-material">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </td>
                                <td>
                                    @Model.ProductsNotInItem[i].ProductName
                                </td>
                                <td>
                                    @Model.ProductsNotInItem[i].Description
                                </td>
                                <td>
                                    @Html.TextBox("PricesAndIdsNotInItem[" + i + "].Price", Model.ProductsNotInItem[i].Price.ToString("F"), new { @class = "form-control" })
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            }
            else
            {
                <div id="subcategoriesDiv" hidden="hidden"></div>
            }

            <div class="form-group" id="divPayingItemSum">
                <label>Сумма:</label>
                <input type="text" id="sumInput" name="PayingItem.Summ" value="@Model.PayingItem.Summ.ToString("F")" class="form-control" />
                @Html.ValidationMessageFor(x => x.PayingItem.Summ)
            </div>

            <div class="form-group">
                <label>Счет:</label>
                @Html.DropDownListFor(x => x.PayingItem.AccountID, accList.Select(x => new SelectListItem()
                {
                    Text = x.AccountName,
                    Value = x.AccountID.ToString()
                }), new { @class = "selectpicker" })
            </div>

            <div class="form-group">
                <label>Дата:</label>
                @Html.TextBoxFor(x => x.PayingItem.Date, new { @class = "datepicker form-control", onclick = "clickDate()", Value = DateTime.Today.ToShortDateString() })
                @Html.ValidationMessageFor(x => x.PayingItem.Date)
            </div>

            <div class="form-group">
                <label>Комментарий:</label>
                @Html.TextAreaFor(x => x.PayingItem.Comment, new { @class = "form-control" })
            </div>
        </div>

        <div class="panel-footer">
            <input type="submit" value="Сохранить изменения" class="btn btn-success btn-raised btn-sm" />
            @Ajax.ActionLink("Назад", "List", null, new AjaxOptions()
            {
                Url = Url.Action("List"),
                UpdateTargetId = "payingDiv"
            }, new { @class = "btn btn-default btn-raised btn-sm" })
        </div>
    }
</div>

@if (Model.PayingItemProducts != null && Model.PayingItemProducts.Count != 0)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#divPayingItemSum').attr('hidden', true);
        });
    </script>
}
<script type="text/javascript">
    function changeCategoryEdit() {
        var id = $('#PayingItem_CategoryID').val();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetSubCategoriesForEdit")/' + id,
            success: function(data) {
                $('#subcategoriesDiv').replaceWith(data);
                $('#divProducts').attr('hidden', true);
                $('#PayingItem_Comment').val('');
                $('#sumInput').val('0');
            }
        });
    };

    $(document).ready(function() {
        $('.selectpicker').selectpicker();
        clickDate();
    });
</script>